#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    bin.update
    ~~~~~~~~~~

    Simple script to update my arch linux system.

    :copyright: (c) 2022 by Bent Mueller.
    :license: MIT, see LICENSE for more details.
"""

import os
from os import system, chdir
from pathlib import Path
import argparse
from argparse import ArgumentParser


def run_command(command):
    """Runs a command and returns the output."""
    rv = system(command)

    if rv != 0:
        raise IOError("Error occurred while running command: {}, {}".format(command, rv))

synces_repos: list = []
failed_repos: list = []

def sync_repository_at_path(path):
    """Syncs the repository at the given path."""

    chdir(path)

    try:
        run_command("git pull")

    except IOError as e:

        print("Failed to sync repository at path: {}".format(path))
        failed_repos.append(path)
        return

    try:
        run_command("git add -A")
        run_command("git commit -m 'Auto-Sync commit'")
        run_command("git push")

    except IOError:
        print("No changes to commit in repository: {}".format(path))

    synces_repos.append(path)


def update():
    """Updates the system."""

    # Update with pacman
    run_command("sudo pacman --noconfirm -Syu")

    # Update with yay
    run_command("yay --nocleanmenu --noupgrademenu --nodiffmenu --noeditmenu -Syu")


def sync_repositories(repos: list = ['dotfiles', 'notes']):
    """Syncs the repositories."""

    # Sync the git repositories
    git_dir = Path.home() / "git"

    for repo in repos:
        sync_repository_at_path(git_dir / repo)

    print("Synced repositories: ")
    for repo in synces_repos:
        print("\t{}".format(repo.absolute()))

    if len(failed_repos) > 0:
        print(80 * "=")
        print('ERROR:')
        print("\tFailed to sync repositories: {}".format(failed_repos))

if __name__ == "__main__":
    parser = ArgumentParser(description="Update my arch linux system.")
    parser.add_argument("-u", "--update", action="store_true", help="Update the system.")
    parser.add_argument("-s", "--sync", action="store_true", help="Sync the repositories.")
    args = parser.parse_args()

    if args.update:
        update()

    if args.sync:
        sync_repositories()

    if not args.update and not args.sync:
        parser.print_help()
